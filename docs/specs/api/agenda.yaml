openapi: 3.0.3
info:
  title: SPYMEO Agenda API
  description: Calendar and appointment scheduling for practitioners
  version: 1.0.0

servers:
  - url: http://localhost:3000/api

tags:
  - name: Events
    description: Calendar events management
  - name: Settings
    description: Agenda configuration

security:
  - cookieAuth: []

paths:
  /agenda/events:
    get:
      tags: [Events]
      summary: List all events
      description: Returns all calendar events for the practitioner
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

    post:
      tags: [Events]
      summary: Create event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
            example:
              title: "Consultation adulte"
              start: "2025-10-15T10:00:00Z"
              end: "2025-10-15T11:00:00Z"
              extendedProps:
                clientId: "client-123"
                clientName: "Alice Dupont"
                color: "#0b5b68"
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /agenda/events/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string

    get:
      tags: [Events]
      summary: Get event details
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Events]
      summary: Update event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '200':
          description: Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

    delete:
      tags: [Events]
      summary: Delete event
      responses:
        '200':
          description: Event deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean

  /agenda/settings:
    get:
      tags: [Settings]
      summary: Get agenda settings
      responses:
        '200':
          description: Agenda configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaSettings'

    put:
      tags: [Settings]
      summary: Update agenda settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendaSettings'
      responses:
        '200':
          description: Settings updated

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        allDay:
          type: boolean
          default: false
        extendedProps:
          type: object
          properties:
            clientId:
              type: string
            clientName:
              type: string
            notes:
              type: string
            color:
              type: string
            type:
              type: string
              enum: [consultation, blocked, personal]

    EventInput:
      type: object
      required: [title, start]
      properties:
        title:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        allDay:
          type: boolean
        extendedProps:
          type: object

    AgendaSettings:
      type: object
      properties:
        businessHours:
          type: object
          properties:
            daysOfWeek:
              type: array
              items:
                type: integer
                minimum: 0
                maximum: 6
              description: "0=Sunday, 1=Monday, etc."
            startTime:
              type: string
              pattern: '^\d{2}:\d{2}$'
              example: "09:00"
            endTime:
              type: string
              pattern: '^\d{2}:\d{2}$'
              example: "18:00"
        slotDuration:
          type: integer
          description: Minutes per slot
          default: 30
        defaultEventDuration:
          type: integer
          description: Default appointment duration in minutes
          default: 60
        allowBookings:
          type: boolean
          default: true
        bookingLeadTime:
          type: integer
          description: Minimum hours before appointment can be booked
          default: 24
        cancellationPolicy:
          type: string

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: spy_session
